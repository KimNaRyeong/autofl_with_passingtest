{
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.LevenbergMarquardtOptimizerTest(java.lang.String)": 0.004723141671638894,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testTrivial()": 0.39246105718089613,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testQRColumnsPermutation()": 0.44916176607278396,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNoDependency()": 0.40030530407399906,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet()": 0.4469576555858759,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testTwoSets()": 0.39537878920239083,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testNonInversible()": 0.2607224292133564,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testIllConditioned()": 0.39274689318610717,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersSimple()": 0.38729507664709445,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted()": 0.4656019915259077,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testRedundantEquations()": 0.45956265392826806,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentEquations()": 0.3130514511074875,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes()": 0.3466273159804126,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters()": 0.34643120839627267,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.checkEstimate(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction, double, int, double, double, double, boolean)": 0.2757273312634649,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit()": 0.4555788082477188,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testMath199()": 0.20629897821961884,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.LinearProblem.LinearProblem(double[][], double[])": 0.1407393539705368,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.LinearProblem.value(double[])": 0.1283595285385938,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.LinearProblem.jacobian()": 0.1151445460292248,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.LinearProblem.Anonymous-39b7949f-7781-49ae-aebe-06f1287b9aad.value(double[])": 0.15178707431635305,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.Circle.Circle()": 0.28912463428187607,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.Circle.addPoint(double, double)": 0.21915111140869714,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.Circle.getN()": 0.023152987248891258,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.Circle.getRadius(java.awt.geom.Point2D.Double)": 0.22411628074496895,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.Circle.jacobian(double[])": 0.22070136171911617,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.Circle.value(double[])": 0.2419144262083685,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.Circle.jacobian()": 0.10645996487804062,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.Circle.Anonymous-3d01ba05-b417-40e1-ba96-559609271a2c.value(double[])": 0.13492524311142168,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem.QuadraticProblem()": 0.216055663037622,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem.addPoint(double, double)": 0.17491586007066692,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem.jacobian(double[])": 0.11158726610436681,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem.value(double[])": 0.13604825166721937,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem.jacobian()": 0.10645996487804063,
    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.QuadraticProblem.Anonymous-65092fb6-bd2e-4926-8bac-d20d477ae95f.value(double[])": 0.13492524311142168
}