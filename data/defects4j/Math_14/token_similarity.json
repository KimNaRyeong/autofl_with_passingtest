{
    "org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample()": {
        "org.apache.commons.math3.fitting.PolynomialFitterTest.testFit()": 0.2812103291234148,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.testNoError()": 0.84499619990187,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.testSmallError()": 0.9669091131340947,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.testMath798()": 0.2684820033278713,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.testMath798WithToleranceTooLow()": 0.24220353710187056,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.testMath798WithToleranceTooLowButNoException()": 0.2618716669593565,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.doMath798(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer, int, double[])": 0.1427889167545793,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.testRedundantSolvable()": 0.08644530053908087,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.testRedundantUnsolvable()": 0.08412877884931272,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.checkUnsolvableProblem(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer, boolean)": 0.5019330088714345,
        "org.apache.commons.math3.fitting.PolynomialFitterTest.buildRandomPolynomial(int, java.util.Random)": 0.439776242072571
    }
}